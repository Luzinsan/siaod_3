#include <iostream>
#include "ListNode.h"
#include <fstream>
/* 
10. Подготовить текстовый файл, 
содержащий не менее 12 целых чисел.
Прочитать данные из этого файла и сформировать односвязный кольцевой список. 
В сформированном списке целых чисел из каждого положительного элемента списка 
вычесть значение следующего элемента, 
а к каждому отрицательному элементу списка прибавить значение следующего элемента. 
Вывести на экран исходный список и после его обработки.
После завершения работы со списком освободите занимаемую им динамическую память

*/

using namespace luzinsan;

int main()
{
	setlocale(LC_ALL, "Rus");
	
	std::ifstream FileIn("inputDATA.txt");
	if (!FileIn.is_open())
		std::cout << "Входной файл не может быть открыт!\n";
	else
	{
		std::cout << "\n\t10. Подготовить текстовый файл,"
			  << "\n\tсодержащий не менее 12 целых чисел."
			  << "\n\tПрочитать данные из этого файла и сформировать односвязный кольцевой список."
			  << "\n\tВ сформированном списке целых чисел из каждого положительного элемента списка"
			  << "\n\tвычесть значение следующего элемента,"
			  << "\n\tа к каждому отрицательному элементу списка прибавить значение следующего элемента."
			  << "\n\tВывести на экран исходный список после его обработки."
			  << "\n\tПосле завершения работы со списком освободите занимаемую им динамическую память.";

		ListNode* list{}; // создаём фиктивный элемент списка
		int number;
		FileIn >> number;
		list->InsertNode(list->getBeginList(), number);
		list = list->getBeginList();
	
		while (!FileIn.eof())
		{// Проводим полное считывание данных в список
			FileIn >> number;
			list->InsertNode(list, number);
			list = list->getNext();
		}
		list->getNext() = list->getBeginList(); // заворачиваем в кольцевой список
		
		std::cout << "\nИсходные данные: \n";
		list->PrintList(list->getBeginList());
		list->Rationing(list->getBeginList());
		std::cout << "\nОбработанные данные: \n";
		list->PrintList(list->getBeginList());
		list->Dispose();
	}

	FileIn.close();
	return 0;
}
